<UserControl x:Class="EBS3000Dashboard.Vis.Views.Segments.AnalysisToolbarView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:c="http://schemas.uid.com/eberhard/core"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:local="clr-namespace:EBS3000Dashboard.Vis.Views.Segments"
             xmlns:ls="clr-namespace:EBS3000Dashboard.Vis.Settings">
  <UserControl.Resources>
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter " />
    <c:InvertibleBoolToVisibilityConverter x:Key="InvertibleBoolToVisibilityConverter" />
  </UserControl.Resources>
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="110" />
      <RowDefinition Height="*" />
    </Grid.RowDefinitions>

    <!--Settings area-->
    <Grid>
      <Border Height="1"
                    Background="{DynamicResource DefaultForeground|Normal}"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Bottom">
        <Border.Effect>
          <DropShadowEffect BlurRadius="4"
                                      Color="#FF000000"
                                      Opacity="0.3"
                                      Direction="270" />
        </Border.Effect>
      </Border>
      <Border Name="SettingsBorder"
                    VerticalAlignment="Stretch"
                    HorizontalAlignment="Stretch"
                    Background="#FFF2F2F2"
                    Padding="40,20">
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="358" />
            <ColumnDefinition Width="82" />
            <ColumnDefinition Width="488" />
            <ColumnDefinition Width="52" />
            <ColumnDefinition Width="400"/>
            <ColumnDefinition Width="*" />
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="10" />
            <RowDefinition Height="*" />
          </Grid.RowDefinitions>

          <StackPanel Orientation="Horizontal" IsEnabled="{Binding IsAnyProductSelected}">
          </StackPanel>

          <ComboBox Grid.Column="2"
                              Style="{StaticResource ComboBox|MultiContentStyle}"
                              Tag="{DynamicResource MessageTypeTag}"
                              ItemsSource="{Binding MessageTypes}"
                              SelectedItem="{Binding SelectedMessageType}">
          </ComboBox>

          <ToggleButton Name="TimeSpanSettingTB"
                                  Grid.Column="2"
                                  Grid.Row="2"
                                  Style="{StaticResource ToggleButtonStyle|WithArrow}"
                                  IsEnabled="{Binding IsAnyProductSelected}"
                                  Content="{DynamicResource TimeSpan}"
                                  IsChecked="{Binding IsTimeSpanSettingOpened, Mode=TwoWay}"
                                  c:AttachedProperties.SubContent="{Binding AnalysisTimeSpan}" />
          <!--Overlay for popup-->
          <Border Background="Black"
                            Margin="-40,-200,-40,-1500"
                            Grid.RowSpan="3"
                            Grid.ColumnSpan="5"
                            Opacity="0.3"
                            Visibility="{Binding Path=IsAnySettingOpened, Converter={StaticResource BooleanToVisibilityConverter}}" />
        </Grid>
      </Border>
    </Grid>

    <!--Popup for timespan settings-->
    <Grid Name="timeSpanGrid"
              Grid.Row="1"
              Height="130"
              Width="{Binding ElementName=TimeSpanSettingTB, Path=ActualWidth}"
              VerticalAlignment="Top"
              HorizontalAlignment="Left"
              Margin="480,-20,0,0"
              Background="{Binding ElementName=SettingsBorder, Path=Background}"
              Panel.ZIndex="10"
              Visibility="{Binding ElementName=TimeSpanSettingTB, Converter={StaticResource BooleanToVisibilityConverter}, Path=IsChecked}">
      <Grid.Effect>
        <DropShadowEffect Direction="270"
                                  BlurRadius="6"
                                  ShadowDepth="3"
                                  Opacity="0.3"
                                  Color="#FF000000" />
      </Grid.Effect>
      <Grid Margin="20,10">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="110" />
          <ColumnDefinition Width="10" />
          <!--Date-->
          <ColumnDefinition Width="90" />
          <ColumnDefinition Width="10" />
          <!--Time-->
          <ColumnDefinition Width="75" />
          <ColumnDefinition Width="10" />
          <!--Label and icon-->
          <ColumnDefinition Width="75" />
          <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition Height="20" />
          <!--Gap-->
          <RowDefinition Height="10" />
          <RowDefinition Height="20" />
          <!--Gap-->
          <RowDefinition Height="10" />
          <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <!--From-->
        <TextBlock Style="{StaticResource TextBlock|Header4|Grey|Light}"
                           Text="{DynamicResource From}" />
        <TextBlock Style="{StaticResource TextBlock|Header4|Grey|Light}"
                           Text="{DynamicResource Date}"
                           HorizontalAlignment="Right" />
        <Button Name="StartDateBtn"
                        Grid.Column="2"
                        Style="{StaticResource Button|SimpleStyle}"
                        ContentStringFormat="{}{0:dd.MM.yyyy}"
                        Content="{Binding AnalysisStartDate, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                        Command="{Binding OpenStartDateSettingPopupCommand}" />
        <Popup x:Name="StartDatePopup"
                       Height="400"
                       Width="400"
                       Placement="Right"
                       PlacementTarget="{Binding ElementName=StartDateBtn}"
                       IsOpen="{Binding IsStartDatePopupOpen, Mode=OneWay}"
                       AllowsTransparency="True">
          <Canvas>
            <Calendar Margin="10"
                                  SelectedDate="{Binding AnalysisStartDate, Mode=TwoWay}" />
          </Canvas>
        </Popup>
        <Button Name="StartTimeBtn"
                        Grid.Column="4"
                        Style="{StaticResource Button|SimpleStyle}"
                        ContentStringFormat="{}{0:HH:mm:ss}"
                        Content="{Binding AnalysisStartTime, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                        Command="{Binding OpenStartTimeSettingPopupCommand}" />
        <Popup x:Name="StartTimePopup"
                       Height="400"
                       Width="400"
                       Placement="Right"
                       PlacementTarget="{Binding ElementName=StartTimeBtn}"
                       IsOpen="{Binding IsStartTimePopupOpen, Mode=OneWay}"
                       AllowsTransparency="True">
          <Canvas>
            <xctk:TimePicker  Margin="10,0,0,0"
                                          Width="100"
                                          Format="Custom"
                                          FormatString="HH:mm:ss"
                                          ShowDropDownButton="False"
                                          Value="{Binding AnalysisStartTime}" />
          </Canvas>
        </Popup>
        <TextBlock Grid.Column="6"
                           Style="{StaticResource TextBlock|Header4|Grey|Light}"
                           Text="{DynamicResource Clock}" />
        <Rectangle Fill="{StaticResource DefaultForeground|Normal}"
                           OpacityMask="{StaticResource RelationshipIcon}"
                           Visibility="Collapsed"
                           Width="14"
                           Grid.Column="7"
                           Grid.RowSpan="3"
                           HorizontalAlignment="Left" />
        <!--To-->
        <TextBlock Grid.Row="2"
                           Style="{StaticResource TextBlock|Header4|Grey|Light}"
                           Text="{DynamicResource To}" />
        <TextBlock Grid.Row="2"
                           Style="{StaticResource TextBlock|Header4|Grey|Light}"
                           Text="{DynamicResource Date}"
                           HorizontalAlignment="Right" />
        <Button Name="EndDateBtn"
                        Grid.Column="2"
                        Grid.Row="2"
                        Style="{StaticResource Button|SimpleStyle}"
                        ContentStringFormat="{}{0:dd.MM.yyyy}"
                        Content="{Binding AnalysisEndDate, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                        Command="{Binding OpenEndDateSettingPopupCommand}" />
        <Popup x:Name="EndDatePopup"
                       Height="400"
                       Width="400"
                       Placement="Right"
                       PlacementTarget="{Binding ElementName=EndDateBtn}"
                       IsOpen="{Binding IsEndDatePopupOpen, Mode=OneWay}"
                       AllowsTransparency="True">
          <Canvas>
            <Calendar Margin="10"
                                  SelectedDate="{Binding AnalysisEndDate, Mode=TwoWay}" />
          </Canvas>
        </Popup>
        <Button Name="EndTimeBtn"
                        Grid.Column="4"
                        Grid.Row="2"
                        Style="{StaticResource Button|SimpleStyle}"
                        ContentStringFormat="{}{0:HH:mm:ss}"
                        Content="{Binding AnalysisEndTime, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                        Command="{Binding OpenEndTimeSettingPopupCommand}" />
        <Popup x:Name="EndTimePopup"
                       Grid.Row="2"
                       Height="400"
                       Width="400"
                       Placement="Right"
                       PlacementTarget="{Binding ElementName=EndTimeBtn}"
                       IsOpen="{Binding IsEndTimePopupOpen, Mode=OneWay}"
                       AllowsTransparency="True">
          <Canvas>
            <xctk:TimePicker  Margin="10,0,0,0"
                                          Width="100"
                                          Format="Custom"
                                          FormatString="HH:mm:ss"
                                          ShowDropDownButton="False"
                                          Value="{Binding AnalysisEndTime}" />

          </Canvas>
        </Popup>
        <TextBlock Grid.Column="6"
                           Grid.Row="2"
                           Style="{StaticResource TextBlock|Header4|Grey|Light}"
                           Text="{DynamicResource Clock}" />
        <Rectangle Fill="{StaticResource DefaultForeground|Normal}"
                           OpacityMask="{StaticResource RelationshipIcon}"
                           Visibility="Collapsed"
                           Width="14"
                           Grid.Column="7"
                           Grid.Row="4"
                           Grid.RowSpan="3"
                           HorizontalAlignment="Left" />
        <Rectangle Fill="{StaticResource DefaultForeground|Normal}"
                           OpacityMask="{StaticResource RelationshipIcon}"
                           Visibility="Collapsed"
                           Width="14"
                           Grid.Column="7"
                           Grid.Row="6"
                           Grid.RowSpan="3"
                           HorizontalAlignment="Left" />
        <Button Content="OK"
                        Margin="0,0,0,10"
                        Grid.Row="4"
                        Grid.Column="6"
                        Grid.ColumnSpan="2"                        
                        VerticalAlignment="Bottom"
                        HorizontalAlignment="Right"
                        Command="{Binding ConfirmTimeSpanSettingsCommand}" />
        <Button Content="{DynamicResource ResetAll}"
                        Margin="0,0,0,10"
                        Grid.Row="4"
                        Grid.Column="2"
                        Grid.ColumnSpan="3"
                        VerticalAlignment="Bottom"
                        HorizontalAlignment="Right"
                        Command="{Binding ResetTimeSpanSettingsCommand}" />
      </Grid>
    </Grid>
  </Grid>
</UserControl>