<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Eberhard.Core.Controls"
                    xmlns:c="clr-namespace:Eberhard.Core.Controls.Charting">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Eberhard.Core;component/Controls/GraphBase.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <Style x:Key="Histogram|NotAvilableStyle"
           TargetType="Border">
        <Setter Property="BorderThickness"
                Value="0,3" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource Brush|Grey}" />
    </Style>
    <Style x:Key="Histogram|ErrorZoneStyle" 
           TargetType="Border"
           BasedOn="{StaticResource Graph|ErrorZoneStyle}">
        <Setter Property="BorderThickness"
                Value="0,3" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource Brush|Red}"/>
    </Style>
    <Style x:Key="Histogram|WarningZoneStyle"
           BasedOn="{StaticResource Graph|WarningZoneStyle}"
           TargetType="Border">
        <Setter Property="BorderThickness"
                Value="0,1" />
    </Style>

    <Style TargetType="{x:Type local:Histogram}"
           BasedOn="{StaticResource {x:Type local:GraphBase}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Histogram}">
                    <Border x:Name="root"
                            Background="{TemplateBinding Background}"
                            Height="221"
                            Width="181">

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SizeStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.5">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CubicEase EasingMode="EaseInOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>

                                <VisualState x:Name="Small">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Height">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="225" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Width">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="181" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Medium">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Height">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="380" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Width">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="336" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Large">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Height">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="770" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Width">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="726" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="40" />
                                <RowDefinition />
                                <RowDefinition Height="4" />
                            </Grid.RowDefinitions>
                            
                            <!-- HEADER -->
                            <TextBlock Text="{TemplateBinding Header}"
                                       Style="{DynamicResource TextBlock|Header3|Light}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center" />
                            <Rectangle x:Name="HeaderBar"
                                       VerticalAlignment="Bottom"
                                       Height="4" />
                            
                            <Grid Grid.Row="1"
                                  Margin="10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="3*"/>
                                </Grid.ColumnDefinitions>
                                
                                <c:Axis x:Name="PART_Axis"
                                        Margin="0,0,10,0"
                                        VerticalAlignment="Stretch"/>
                                
                                <c:BarHost x:Name="PART_Bars"
                                           VerticalAlignment="Stretch"
                                           HorizontalAlignment="Stretch"
                                           Margin="0, 4"
                                           Grid.Column="1"/>
                                
                                <!-- PARABEL -->
                                <Path Grid.Column="1" 
                                    Data="F1 M 1722,-1306C 1722,-1268 1828.67,-1249.33 1828.67,-1235.33C 1828.67,-1221.33 1722,-1202.67 1722,-1162"
                                    Stroke="White"
                                    Stretch="Uniform"
                                    StrokeThickness="1"
                                    VerticalAlignment="Stretch"
                                    HorizontalAlignment="Stretch" />


                            </Grid>
                              
                            <Rectangle x:Name="FooterBar"
                                       Grid.Row="2"
                                       Height="4" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Opacity"
                                    Value="0.5" />
                        </Trigger>
                        <Trigger Property="Status"
                                 Value="Normal">
                            <Setter TargetName="HeaderBar"
                                    Property="Fill"
                                    Value="{DynamicResource Brush|Green}" />
                            <Setter TargetName="FooterBar"
                                    Property="Fill"
                                    Value="{DynamicResource Brush|Green}" />
                        </Trigger>
                        <Trigger Property="Status"
                                 Value="Warning">
                            <Setter TargetName="HeaderBar"
                                    Property="Fill"
                                    Value="{DynamicResource Brush|Yellow}" />
                            <Setter TargetName="FooterBar"
                                    Property="Fill"
                                    Value="{DynamicResource Brush|Yellow}" />
                        </Trigger>
                        <Trigger Property="Status"
                                 Value="Error">
                            <Setter TargetName="HeaderBar"
                                    Property="Fill"
                                    Value="{DynamicResource Brush|Red}" />
                            <Setter TargetName="FooterBar"
                                    Property="Fill"
                                    Value="{DynamicResource Brush|Red}" />
                        </Trigger>
                        <Trigger Property="Status"
                                 Value="NotAvilable">
                            <Setter TargetName="HeaderBar"
                                    Property="Fill"
                                    Value="{DynamicResource Brush|Grey}" />
                            <Setter TargetName="FooterBar"
                                    Property="Fill"
                                    Value="{DynamicResource Brush|Grey}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>